{"ast":null,"code":"export function uniq(xs){return Array.from(new Set(xs));}export function match(numb,guess){var numbers=numb.split('');var goods=guess.split('').filter(function(x){return numbers.includes(x);});var bulls=0;var cows=goods.length;var n=numb.slice();var g=guess.slice();for(var i=0;i<goods.length;i++){var x=goods[i];if(n.indexOf(x)==g.indexOf(x)){cows-=1;bulls+=1;}}return bulls+\"B\"+cows+\"C\";}export function test_guess(text){if(text.length==4){var isUnique=true;var copy=text.slice();var i,j;for(i=0;i<4;i++){for(j=i+1;j<4;j++){if(copy[i]===text[j]){isUnique=false;}}}if(isUnique){return true;}else{alert(\"Your four-digit guess must have four unique digits!\");return false;}}else{alert(\"Your guess must be a four-digit number!\");return false;}}export function make_secret_numb(){var numbs=[0,1,2,3,4,5,6,7,8,9];numbs=numbs.sort(function(){return Math.random()-0.5;});return\"\"+numbs[0]+numbs[1]+numbs[2]+numbs[3];}","map":{"version":3,"sources":["/Users/abbycarr/bulls-and-cows/src/game.js"],"names":["uniq","xs","Array","from","Set","match","numb","guess","numbers","split","goods","filter","x","includes","bulls","cows","length","n","slice","g","i","indexOf","test_guess","text","isUnique","copy","j","alert","make_secret_numb","numbs","sort","Math","random"],"mappings":"AAAA,MAAO,SAASA,CAAAA,IAAT,CAAcC,EAAd,CAAkB,CACvB,MAAOC,CAAAA,KAAK,CAACC,IAAN,CAAW,GAAIC,CAAAA,GAAJ,CAAQH,EAAR,CAAX,CAAP,CACD,CAED,MAAO,SAASI,CAAAA,KAAT,CAAeC,IAAf,CAAqBC,KAArB,CAA4B,CAEjC,GAAIC,CAAAA,OAAO,CAAGF,IAAI,CAACG,KAAL,CAAW,EAAX,CAAd,CACA,GAAIC,CAAAA,KAAK,CAAGH,KAAK,CAACE,KAAN,CAAY,EAAZ,EAAgBE,MAAhB,CAAuB,SAACC,CAAD,QAAOJ,CAAAA,OAAO,CAACK,QAAR,CAAiBD,CAAjB,CAAP,EAAvB,CAAZ,CACA,GAAIE,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIC,CAAAA,IAAI,CAAGL,KAAK,CAACM,MAAjB,CAEA,GAAIC,CAAAA,CAAC,CAAGX,IAAI,CAACY,KAAL,EAAR,CACA,GAAIC,CAAAA,CAAC,CAAGZ,KAAK,CAACW,KAAN,EAAR,CAEA,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGV,KAAK,CAACM,MAA1B,CAAkCI,CAAC,EAAnC,CAAuC,CACrC,GAAIR,CAAAA,CAAC,CAAGF,KAAK,CAACU,CAAD,CAAb,CACA,GAAIH,CAAC,CAACI,OAAF,CAAUT,CAAV,GAAgBO,CAAC,CAACE,OAAF,CAAUT,CAAV,CAApB,CAAkC,CAChCG,IAAI,EAAI,CAAR,CACAD,KAAK,EAAI,CAAT,CACD,CACF,CACD,MAAQA,CAAAA,KAAK,CAAG,GAAR,CAAcC,IAAd,CAAqB,GAA7B,CACD,CAED,MAAO,SAASO,CAAAA,UAAT,CAAoBC,IAApB,CAA0B,CAC/B,GAAIA,IAAI,CAACP,MAAL,EAAe,CAAnB,CAAsB,CACpB,GAAIQ,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIC,CAAAA,IAAI,CAAGF,IAAI,CAACL,KAAL,EAAX,CACA,GAAIE,CAAAA,CAAJ,CAAOM,CAAP,CACA,IAAKN,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG,CAAhB,CAAmBA,CAAC,EAApB,CAAwB,CACtB,IAAKM,CAAC,CAAGN,CAAC,CAAG,CAAb,CAAgBM,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CAC1B,GAAID,IAAI,CAACL,CAAD,CAAJ,GAAYG,IAAI,CAACG,CAAD,CAApB,CAAyB,CACvBF,QAAQ,CAAG,KAAX,CACD,CACF,CACF,CACD,GAAIA,QAAJ,CAAc,CACZ,MAAO,KAAP,CACD,CAFD,IAGK,CACHG,KAAK,CAAC,qDAAD,CAAL,CACA,MAAO,MAAP,CACD,CACF,CAlBD,IAmBK,CACHA,KAAK,CAAC,yCAAD,CAAL,CACA,MAAO,MAAP,CACD,CACF,CAED,MAAO,SAASC,CAAAA,gBAAT,EAA4B,CACjC,GAAIC,CAAAA,KAAK,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CAA4B,CAA5B,CAAZ,CACAA,KAAK,CAAGA,KAAK,CAACC,IAAN,CAAW,iBAAMC,CAAAA,IAAI,CAACC,MAAL,GAAgB,GAAtB,EAAX,CAAR,CACA,MAAQ,GAAKH,KAAK,CAAC,CAAD,CAAV,CAAgBA,KAAK,CAAC,CAAD,CAArB,CAA2BA,KAAK,CAAC,CAAD,CAAhC,CAAsCA,KAAK,CAAC,CAAD,CAAnD,CACD","sourcesContent":["export function uniq(xs) {\n  return Array.from(new Set(xs));\n}\n\nexport function match(numb, guess) {\n\n  let numbers = numb.split('');\n  let goods = guess.split('').filter((x) => numbers.includes(x));\n  let bulls = 0;\n  let cows = goods.length;\n\n  let n = numb.slice();\n  let g = guess.slice();\n\n  for (let i = 0; i < goods.length; i++) {\n    let x = goods[i];\n    if (n.indexOf(x) == g.indexOf(x)) {\n      cows -= 1;\n      bulls += 1;\n    }\n  }\n  return (bulls + \"B\" + cows + \"C\");\n}\n\nexport function test_guess(text) {\n  if (text.length == 4) {\n    let isUnique = true;\n    let copy = text.slice();\n    let i, j;\n    for (i = 0; i < 4; i++) {\n      for (j = i + 1; j < 4; j++) {\n        if (copy[i] === text[j]) {\n          isUnique = false;\n        }\n      }\n    }\n    if (isUnique) {\n      return true;\n    }\n    else {\n      alert(\"Your four-digit guess must have four unique digits!\");\n      return false;\n    }\n  }\n  else {\n    alert(\"Your guess must be a four-digit number!\");\n    return false;\n  }\n}\n\nexport function make_secret_numb() {\n  let numbs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  numbs = numbs.sort(() => Math.random() - 0.5);\n  return (\"\" + numbs[0] + numbs[1] + numbs[2] + numbs[3]);\n}"]},"metadata":{},"sourceType":"module"}