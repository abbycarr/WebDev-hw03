{"ast":null,"code":"export function uniq(xs) {\n  return Array.from(new Set(xs));\n}\nexport function match(numb, guess) {\n  let numbers = numb.split('');\n  let goods = guess.split('').filter(x => numbers.includes(x));\n  let bulls = 0;\n  let cows = goods.length;\n  let n = numb.slice();\n  let g = guess.slice();\n\n  for (let i = 0; i < goods.length; i++) {\n    if (n.indexOf(x) == g.indexOf(x)) {\n      cows -= 1;\n      bulls += 1;\n    }\n  }\n\n  return bulls + \"B\" + cows + \"C\";\n}\nexport function test_guess(text) {\n  if (text.length == 4) {\n    let isUnique = true;\n    let copy = text.slice();\n    let i, j;\n\n    for (i = 0; i < 4; i++) {\n      for (j = i + 1; j < 4; j++) {\n        if (copy[i] === text[j]) {\n          isUnique = false;\n        }\n      }\n    }\n\n    if (isUnique) {\n      return true;\n    } else {\n      alert(\"Your four-digit guess must have four unique digits!\");\n      return false;\n    }\n  } else {\n    alert(\"Your guess must be a four-digit number!\");\n    return false;\n  }\n}\nexport function make_secret_numb() {\n  let numbs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  numbs = numbs.sort(() => Math.random() - 0.5);\n  return \"\" + numbs[0] + numbs[1] + numbs[2] + numbs[3];\n}","map":{"version":3,"sources":["/Users/abbycarr/bulls-and-cows/src/game.js"],"names":["uniq","xs","Array","from","Set","match","numb","guess","numbers","split","goods","filter","x","includes","bulls","cows","length","n","slice","g","i","indexOf","test_guess","text","isUnique","copy","j","alert","make_secret_numb","numbs","sort","Math","random"],"mappings":"AAAA,OAAO,SAASA,IAAT,CAAcC,EAAd,EAAkB;AACvB,SAAOC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQH,EAAR,CAAX,CAAP;AACD;AAED,OAAO,SAASI,KAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4B;AAEjC,MAAIC,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAW,EAAX,CAAd;AACA,MAAIC,KAAK,GAAGH,KAAK,CAACE,KAAN,CAAY,EAAZ,EAAgBE,MAAhB,CAAwBC,CAAD,IAAOJ,OAAO,CAACK,QAAR,CAAiBD,CAAjB,CAA9B,CAAZ;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,IAAI,GAAGL,KAAK,CAACM,MAAjB;AAEA,MAAIC,CAAC,GAAGX,IAAI,CAACY,KAAL,EAAR;AACA,MAAIC,CAAC,GAAGZ,KAAK,CAACW,KAAN,EAAR;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACM,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AAErC,QAAIH,CAAC,CAACI,OAAF,CAAUT,CAAV,KAAgBO,CAAC,CAACE,OAAF,CAAUT,CAAV,CAApB,EAAkC;AAChCG,MAAAA,IAAI,IAAI,CAAR;AACAD,MAAAA,KAAK,IAAI,CAAT;AACD;AACF;;AACD,SAAQA,KAAK,GAAG,GAAR,GAAcC,IAAd,GAAqB,GAA7B;AACD;AAED,OAAO,SAASO,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,MAAIA,IAAI,CAACP,MAAL,IAAe,CAAnB,EAAsB;AACpB,QAAIQ,QAAQ,GAAG,IAAf;AACA,QAAIC,IAAI,GAAGF,IAAI,CAACL,KAAL,EAAX;AACA,QAAIE,CAAJ,EAAOM,CAAP;;AACA,SAAKN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACtB,WAAKM,CAAC,GAAGN,CAAC,GAAG,CAAb,EAAgBM,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAID,IAAI,CAACL,CAAD,CAAJ,KAAYG,IAAI,CAACG,CAAD,CAApB,EAAyB;AACvBF,UAAAA,QAAQ,GAAG,KAAX;AACD;AACF;AACF;;AACD,QAAIA,QAAJ,EAAc;AACZ,aAAO,IAAP;AACD,KAFD,MAGK;AACHG,MAAAA,KAAK,CAAC,qDAAD,CAAL;AACA,aAAO,KAAP;AACD;AACF,GAlBD,MAmBK;AACHA,IAAAA,KAAK,CAAC,yCAAD,CAAL;AACA,WAAO,KAAP;AACD;AACF;AAED,OAAO,SAASC,gBAAT,GAA4B;AACjC,MAAIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAZ;AACAA,EAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,CAAW,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAjC,CAAR;AACA,SAAQ,KAAKH,KAAK,CAAC,CAAD,CAAV,GAAgBA,KAAK,CAAC,CAAD,CAArB,GAA2BA,KAAK,CAAC,CAAD,CAAhC,GAAsCA,KAAK,CAAC,CAAD,CAAnD;AACD","sourcesContent":["export function uniq(xs) {\n  return Array.from(new Set(xs));\n}\n\nexport function match(numb, guess) {\n\n  let numbers = numb.split('');\n  let goods = guess.split('').filter((x) => numbers.includes(x));\n  let bulls = 0;\n  let cows = goods.length;\n\n  let n = numb.slice();\n  let g = guess.slice();\n\n  for (let i = 0; i < goods.length; i++) {\n    \n    if (n.indexOf(x) == g.indexOf(x)) {\n      cows -= 1;\n      bulls += 1;\n    }\n  }\n  return (bulls + \"B\" + cows + \"C\");\n}\n\nexport function test_guess(text) {\n  if (text.length == 4) {\n    let isUnique = true;\n    let copy = text.slice();\n    let i, j;\n    for (i = 0; i < 4; i++) {\n      for (j = i + 1; j < 4; j++) {\n        if (copy[i] === text[j]) {\n          isUnique = false;\n        }\n      }\n    }\n    if (isUnique) {\n      return true;\n    }\n    else {\n      alert(\"Your four-digit guess must have four unique digits!\");\n      return false;\n    }\n  }\n  else {\n    alert(\"Your guess must be a four-digit number!\");\n    return false;\n  }\n}\n\nexport function make_secret_numb() {\n  let numbs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  numbs = numbs.sort(() => Math.random() - 0.5);\n  return (\"\" + numbs[0] + numbs[1] + numbs[2] + numbs[3]);\n}"]},"metadata":{},"sourceType":"module"}